rdx := nondet as dst            ## initialize the first argument
rsi := nondet as src            ## initialize the second argument

assume dst & 0b111 = 0          ## alignment constraint
assume src & 0b111 = 0          ## alignment constraint

assume 0x4000 <= dst <= 0x5000  ## arbitrary range  
assume 0x5000 <= src <= 0x6000  ## arbitrary range  

starting from <rltL1L2> with
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000 
    assume @[src+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    assume @[dst+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000

    @[rsp, 8] := <rltL1L2:last> 
    half[0,32] := 0x183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f8000000
end

replace <rltL1L2:last> by
  eq<1> := true
  if @[src+8, 32] > half[0,32] then
    if @[dst+8, 32] > half[0,32] then
        if @[src+8, 32] < @[dst+8, 32] then
            eq := eq && rax = 1
        else
            eq := eq && rax = 0
        end
    else
        eq := eq && rax = 1
    end
  end
  if @[src+8, 32] <= half[0,32] then
    if @[dst+8, 32] <= half[0,32] then
        if @[src+8, 32] < @[dst+8, 32] then
            eq := eq && rax = 1
        else
            eq := eq && rax = 0
        end
    else
        eq := eq && rax = 0
    end
  end
        print rax
    print @[src+8,32]
    print @[dst+8,32]
  assert eq
  halt
end

explore all