rdx := nondet as dst            ## initialize the first argument
rsi := nondet as src            ## initialize the second argument

assume dst & 0b111 = 0          ## alignment constraint
assume src & 0b111 = 0          ## alignment constraint

assume 0x3000 <= dst <= 0x4000  ## arbitrary range  
assume 0x5000 <= src <= 0x6000  ## arbitrary range  

starting from <reqL1L2> with
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000 
    #assume @[src, 40] = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000

    #assume @[dst, 40] = 0x07359fa88c59c9e89f6e5c105a695dd60d0e939ee8c1e556e4a771fc5ab5b8ba0000000001000000
    #assume @[src+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    #assume @[dst+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000

    @[rsp, 8] := <reqL1L2:last>

    q[0, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
    R[0, 32] := 0x0e0a77c19a07df2f666ea36f7879462e36fc76959f60cd29ac96341c4ffffffb
end

replace <reqL1L2:last> by

  eq<1> := true
    if @[src+8, 32] = @[dst+8, 32] then
        eq := eq && rax = 1
    else
        eq := eq && rax = 0
    end  
  print @[src, 40]
  print @[dst, 40]
  print rax
  assert eq
  halt
end

explore all