rdx := nondet as dst            ## initialize the first argument
rsi := nondet as src            ## initialize the second argument

assume dst & 0b111 = 0          ## alignment constraint
assume src & 0b111 = 0          ## alignment constraint

assume 0x3000 <= dst <= 0x4000  ## arbitrary range  
assume 0x5000 <= src <= 0x6000  ## arbitrary range  

starting from <Fr_req> with
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000 
    #assume @[src, 40] = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000

    #assume @[dst, 40] = 0x07359fa88c59c9e89f6e5c105a695dd60d0e939ee8c1e556e4a771fc5ab5b8ba0000000001000000
    #assume @[src+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    #assume @[dst+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    assume @[src, 40]{63} = 0
    assume @[src, 40]{62} = 0

    assume @[dst, 40]{63} = 1
    assume @[dst, 40]{62} = 0
    @[rsp, 8] := <Fr_req:last>
    @[0x7ffff820001, 8] := <Fr_toLongNormal>
    @[0x7ffff800001, 8] := <Fr_toMontgomery>

    q[0, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
    R[0, 32] := 0x0e0a77c19a07df2f666ea36f7879462e36fc76959f60cd29ac96341c4ffffffb
    print @[src, 40]
    print @[dst, 40]
end

replace <Fr_toMontgomery> by
    print <Fr_toMontgomery>
   if @[src, 8]{62} = 0 && @[src, 8]{63} = 0 && @[src, 8]{31} = 0 then
    Monsrc[0,64] := (uext512 @[src, 4] * uext512 R[0,32]) % uext512 q[0, 32]
    @[src + 8, 32] := Monsrc[0, 32]
   end

    if @[src, 8]{62} = 0 && @[src, 8]{63} = 0 && @[src, 8]{31} = 1 then#N&S&N
        Monsrc[0,64] := (uext512 @[src, 4] * uext512 R[0,32]) % uext512 q[0, 32]
        @[src + 8, 32] := Monsrc[0, 32]
        if Monsrc[0, 32]{255} = 1 then
            @[src + 8, 32] := -Monsrc[0, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
        else
            if Monsrc[0, 32] = 0 then
                @[src + 8, 32] := 0
            else
                @[src + 8, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 - Monsrc[0, 32]
            end
        end
    end

    if @[src, 8]{62} = 0 && @[src, 8]{63} = 1 then
        result[0, 64] := uext512 R[0, 32] * uext512 @[src+8, 32] % uext512 q[0, 32]
        @[src+8, 32] := result[0, 32] 
    end
   #####################################################################################
   if @[dst, 8]{62} = 0 && @[dst, 8]{63} = 0 && @[dst, 8]{31} = 0 then
    Mondst[0,64] := (uext512 @[dst, 4] * uext512 R[0,32]) % uext512 q[0, 32]
    @[dst + 8, 32] := Mondst[0, 32]
   end

    if @[dst, 8]{62} = 0 && @[dst, 8]{63} = 0 && @[dst, 8]{31} = 1 then#N&S&N
        Mondst[0,64] := (uext512 @[dst, 4] * uext512 R[0,32]) % uext512 q[0, 32]
        @[dst + 8, 32] := Mondst[0, 32]
        if Mondst[0, 32]{255} = 1 then
            @[dst + 8, 32] := -Mondst[0, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
        else
            if Mondst[0, 32] = 0 then
                @[dst + 8, 32] := 0
            else
                @[dst + 8, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 - Mondst[0, 32]
            end
        end
    end

    if @[dst, 8]{62} = 0 && @[dst, 8]{63} = 1 then
        result[0, 64] := uext512 R[0, 32] * uext512 @[dst+8, 32] % uext512 q[0, 32]
        @[dst+8, 32] := result[0, 32]
    end

end
replace <Fr_toLongNormal> by
   if @[src, 8]{63} = 0 then

    if (@[src, 4]{31}) = 0 then
        @[src + 8, 4] := @[src, 4]
        @[src + 12, 4] := 0
        @[src + 16, 8] := 0
        @[src + 24, 8] := 0
        @[src + 32, 8] := 0
    else
        @[src + 8, 32] := sext256 @[src, 4] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
    end
   end
   if @[dst, 8]{63} = 0 then

    if (@[dst, 4]{31}) = 0 then
        @[dst + 8, 4] := @[dst, 4]
        @[dst + 12, 4] := 0
        @[dst + 16, 8] := 0
        @[dst + 24, 8] := 0
        @[dst + 32, 8] := 0
    else
        @[dst + 8, 32] := sext256 @[dst, 4] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 
    end
   end

   print <Fr_toLongNormal>
end


replace <Fr_req:last> by

  eq<1> := true
  if @[src, 8]{63} = 0 && @[dst, 8]{63} = 0 then
    if @[src, 4] = @[dst, 4] then
        eq := eq && rax = 1
    else
        eq := eq && rax = 0
    end
  else
    if @[src+8, 32] = @[dst+8, 32] then
        eq := eq && rax = 1
    else
        eq := eq && rax = 0
    end   
  end 
  print @[src, 40]
  print @[dst, 40]
  print rax
  assert eq
  halt
end

explore all