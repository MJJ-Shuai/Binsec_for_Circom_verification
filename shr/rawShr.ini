rdi := nondet as dst            ## initialize the first argument
rsi := nondet as src            ## initialize the second argument
#rdx := nondet as temp
assume dst & 0b111 = 0          ## alignment constraint
assume src & 0b111 = 0          ## alignment constraint

assume 0x3000 <= dst <= 0x4000  ## arbitrary range  
assume 0x5000 <= src <= 0x6000  ## arbitrary range  

starting from <rawShr> with
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000 
    #assume 0 <=u rdx <=u 0xffffffffffffffff
    #assume rdx = 1

    #assume @[src, 32] = 0x8000000000000000000000000000000000000000000000000000000000000002

    #assume @[dst, 40] = 0x07359fa88c59c9e89f6e5c105a695dd60d0e939ee8c1e556e4a771fc5ab5b8ba0000000001000000
    #assume @[src+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    #assume @[dst+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    @[rsp, 8] := <rawShr:last>

end

replace <rawShr:last> by
  eq<1> := true
  temp<256> := uext256 rdx
  print @[src, 32] lsr temp
  print rdx
  print @[dst, 32]
  if rdx = 0 then
    eq := eq && @[src, 32] = @[dst, 32]
  end
  if rdx >= 254 then
    eq := eq && @[dst, 32] = 0
  end
  if 0 < rdx < 254 then
    eq := eq && @[src, 32] lsr temp = @[dst, 32]
  end     
  assert eq
  halt
end

explore all