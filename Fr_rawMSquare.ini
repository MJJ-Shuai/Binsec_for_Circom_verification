rdi := nondet as dst
rsi := nondet as src1


assume dst & 0b111 = 0          
assume src1 & 0b111 = 0          
    
assume 0x1000 <= dst <= 0x2000  
assume 0x3000 <= src1 <= 0x4000  ## arbitrary range  
 


starting from <Fr_rawMSquare> with
    #assume @[src1, 32]{255} = 0
    #assume @[src1, 32] = 0x274b96d329e3b4496847f1dc39601d16fc07ee5f0a8e418e2d8c8a81c6c46537
    assume @[src1, 32] = 0x1a7855215e6c4b0cf02a37d1d2c8fb001f24f29e98a784096786558e824ee6b4
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000 
    @[rsp, 8] := <Fr_rawMSquare:last>   
end

replace <Fr_rawMSquare:last> by
  q[0, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
  R[0, 32] := 0x0e0a77c19a07df2f666ea36f7879462e36fc76959f60cd29ac96341c4ffffffb
  Rr[0, 32]:= 0x15ebf95182c5551cc8260de4aeb85d5d090ef5a9e111ec87dc5ba0056db1194e
  eq<1> := true
   #0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
  result[0, 64] := uext512 @[src1, 32] * uext512 @[src1, 32]
  eq := eq && uext512 @[dst, 32] * uext512 R[0, 32] % uext512 q[0, 32] = result[0, 64] % uext512 q[0, 32]
   print @[src1, 32]
   print result[0,64]
   print result[0, 64] % uext512 q[0, 32]
   print @[dst, 32]
  assert eq
  halt
end

explore all