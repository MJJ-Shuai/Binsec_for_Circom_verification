rdi := nondet as dst            ## initialize the first argument
rsi := nondet as src            ## initialize the second argument
#rdx := nondet as temp
assume dst & 0b111 = 0          ## alignment constraint
assume src & 0b111 = 0          ## alignment constraint

assume 0x3000 <= dst <= 0x4000  ## arbitrary range  
assume 0x5000 <= src <= 0x6000  ## arbitrary range  

starting from <rawShl> with
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000 
    #assume 0 <=u rdx <=u 0xffffffffffffffff
    #assume 0 <= rdx <= 0x0000000000000100

    #assume @[src, 32] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

    #assume @[dst, 40] = 0x07359fa88c59c9e89f6e5c105a695dd60d0e939ee8c1e556e4a771fc5ab5b8ba0000000001000000
    #assume @[src+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    #assume @[dst+8, 32] = 0x0000000000000000000000000000000000000000000000000000000000000000
    @[rsp, 8] := <rawShl:last>
    q[0, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
end

replace <rawShl:last> by
  eq<1> := true
  temp<256> := uext256 rbx
        print @[src, 32]
  if rbx = 0 then
    eq := eq && @[src, 32] = @[dst, 32]
  end
  if rbx >= 254 then
    eq := eq && @[dst, 32] = 0
  end
  if 0 < rbx < 254 then
    if (@[src, 32] lsl temp) >= q[0, 32] then
        before[0, 32] := @[src, 32] lsl temp
        mask[0, 8] := 0x3fffffffffffffff
        before[24, 8] := mask[0, 8] & before[24, 8]

        after[0, 32] := (@[src, 32] lsl temp) - q[0, 32]
        after[24, 8] := mask[0, 8] & after[24, 8]
        if before[0,32] >= q[0, 32] then
            eq := eq && after[0,32] = @[dst, 32]
        else
            eq := eq && before[0,32] = @[dst, 32]
        end       
    end
    if (@[src, 32] lsl temp) < q[0, 32] then
        eq := eq && (@[src, 32] lsl temp) = @[dst, 32]
    end
  end   
  if eq = false then
    print @[src, 32]
    print @[src, 32] lsl temp
    print rbx
    print @[dst, 32]
    print (@[src, 32] lsl temp) - q[0, 32]
    print before[0,32]
    print after[0,32]
  end  
  assert eq
  halt
end

explore all