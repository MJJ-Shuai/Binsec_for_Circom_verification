rdi := nondet as dst            ## initialize the first argument
rsi := nondet as src            ## initialize the second argument
rdx := nondet as n              ## initialize the third argument

assume dst & 0b111 = 0          ## alignment constraint
assume src & 0b111 = 0          ## alignment constraint

assume n <= 10                 ## arbitrary bound
assume 0x4000 <= dst <= 0x5000  ## arbitrary range  
assume 0x5000 <= src <= 0x6000  ## arbitrary range  

starting from <Fr_copyn_loop> with
  for i<64> in 0 to 5 * n - 1 do
    ## initialize the source content
    @[src + 8 * i, 8] := buf[8 * i, 8]
  end
end

replace <Fr_copyn_loop:last> by
  assert rdi = dst              ## check rdi final value
  assert rsi = src              ## check rsi final value
  eq<1> := true
  for i<64> in 0 to 5 * n - 1 do
    ## check the destination content
    eq := eq && @[dst + 8 * i, 8] = buf[8 * i, 8]
  end
  assert eq
  halt
end

explore all
