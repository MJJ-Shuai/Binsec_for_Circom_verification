rdi := nondet as dst          
rsi := nondet as src1          
rdx := nondet as src2        
assume dst & 0b111 = 0         
assume src1 & 0b111 = 0          
      
assume 0x1000 <= dst <= 0x2000  
assume src1 = 0x4000  ## arbitrary range  



starting from <rawAddLS> with

    element2[0, 8] := src2
    element2[8, 24] := 0x000000000000000000000000000000000000000000000000
end
#reach <rawAddLL:last> then print @[dst, 32] and print (@[src1, 32] + @[src2, 32]) % 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
replace <rawAddLS:last> by
  
  eq<1> := true
   over<1> := false
    result2[0,64] := (uext512 @[src1, 32] + uext512 element2[0,32])
    if result2[0,64]{256} <> 0 then
      over := true
    end
   expected_result<256> := (@[src1, 32] + element2[0,32])
   if (@[src1, 32] + element2[0,32] >= 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001) || over then
    #print @[src1, 32]
    #print element2[0,32]
    #print @[dst, 32]
    #print (@[src1, 32] + element2[0,32])
    #print (@[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001)
    eq := eq && @[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 = @[src1, 32] + element2[0,32]
   else
    eq := eq && @[dst, 32] = expected_result
   end
   #eq := eq && @[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 = @[src1, 32] + @[src2, 32]
   
  assert eq
  print model
  halt
end

explore all

