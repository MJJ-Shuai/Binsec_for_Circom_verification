rdi := nondet as dst          
rsi := nondet as src1          
rdx := nondet as src2        
assume dst & 0b111 = 0         
assume src1 & 0b111 = 0          
assume src2 & 0b111 = 0         
assume 0x1000 <= dst <= 0x2000  
assume src1 = 0x4000  ## arbitrary range  
assume src2 = 0x6000  ## arbitrary range  


starting from <rawAddLL> with
    assume @[src1, 32] = 0xf20000506a0204e00080feffffffff3fffffffffffa45089ffffffffffffff15
    assume @[src2, 32] = 0xf000008001e00163ffffffffffffff3f0000000000dbcff4ffffffffffff7f69
    #assume @[dst, 32]{255} = 0
    #assume 0x7ffff000000 <= rsp <= 0x7ffff800000 # 假设一个任意的栈范围
    #@[rsp, 8] := <rawAddLL:last>   # 设置返回地址
end
#reach <rawAddLL:last> then print @[dst, 32] and print (@[src1, 32] + @[src2, 32]) % 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
replace <rawAddLL:last> by
  
  eq<1> := true
    over<1> := false
    result2[0,64] := (uext512 @[src1, 32] + uext512 @[src2, 32])
    if result2[0,64]{256} <> 0 then
      over := true
    end
   expected_result<256> := (@[src1, 32] + @[src2, 32])
   if (@[src1, 32] + @[src2, 32] >= 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001) || over then
    eq := eq && @[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 = @[src1, 32] + @[src2, 32]
   else
    eq := eq && @[dst, 32] = expected_result
   end
   #eq := eq && @[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 = @[src1, 32] + @[src2, 32]
    print @[src1, 32]
    print @[src2, 32]
    print @[dst, 32]
    print (@[src1, 32] + @[src2, 32])
    print (@[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001)
  if eq = false then
    print @[src1, 32]
    print @[src2, 32]
    print @[dst, 32]
    print (@[src1, 32] + @[src2, 32])
    print (@[dst, 32] + 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001)
  end 
  assert eq
  halt
end

explore all

