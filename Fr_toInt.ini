rdi := nondet as src2
rsi := nondet as src1
         
assume src1 & 0b111 = 0
assume src2 & 0b111 = 0            

assume 0x3000 <= src1 <= 0x4000  ## arbitrary range  
assume 0x5000 <= src2 <= 0x6000  ## arbitrary range  


starting from <Fr_toInt> with
    #assume @[src1, 32]{255} = 0
    assume @[src2, 40] = 0x082c42640b3fc96f00504512000058040801280828200000432ec04b608000008000000000000000
    #assume @[src2, 40] = 0x0e0a77c19a07df2f666ea36f7879462e36fc76959f60cd29ac96341c4ffffffaf000000000000002
    #assume @[src1, 40]{62} = 0
    #assume @[src1, 40]{63} = 0
    #assume @[src1, 40]{8} = 0
    assume 0x7ffff000000 <= rsp <= 0x7ffff800000
    q[0, 32] := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
    R[0, 32] := 0x0e0a77c19a07df2f666ea36f7879462e36fc76959f60cd29ac96341c4ffffffb 
    R2[0,32] := 0x0216d0b17f4e44a58c49833d53bb808553fe3ab1e35c59e31bb8e645ae216da7
    Rr[0, 32]:= 0x15ebf95182c5551cc8260de4aeb85d5d090ef5a9e111ec87dc5ba0056db1194e
        
    @[rsp, 8] := <Fr_toInt:last>   
    @[0x7ffff800001, 8] := <Fr_toNormal>
end
replace <Fr_toNormal> by
    print @[src2, 40]
   reverse[0,64] := uext512 @[src2+8, 32] * uext512 Rr[0, 32] % uext512 q[0, 32]
   if @[src2, 8]{62} = 0 || @[src2, 8]{63} = 0 then
    @[src2, 40] := @[src2, 40] #N || S
   end
   if @[src2, 8]{63} = 1 && @[src2, 8]{62} = 1 then # M & L
    @[src2 + 8, 32] := reverse[0,32]
    @[src2, 8] := 0x8000000000000000
   end
   
end

replace <Fr_toInt:last> by
   eq<1> := true
   print q[0, 8]
   #0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
  if @[src2, 8]{63} = 0 then
    eq := eq && rax = sext64 eax
  end
  if @[src2, 8]{63} = 1 then
    if @[src2+8, 8]{31} = 0 && @[src2 + 16, 8] = 0 && @[src2 + 24, 8] = 0 && @[src2 + 32, 8] = 0 then
      print rax
      eq := eq && rax = @[src2+8, 8]
    end
    if (@[src2+8, 8]{31} <> 0 || @[src2 + 16, 8] <> 0 || @[src2 + 24, 8] <> 0 || @[src2 + 32, 8] <> 0) && @[src2 + 8, 32] >= q[0, 32] then
      print rbx
      print rax
      eq := eq && rbx = 0
    end
    if (@[src2+8, 8]{31} <> 0 || @[src2 + 16, 8] <> 0 || @[src2 + 24, 8] <> 0 || @[src2 + 32, 8] <> 0) && @[src2 + 8, 32] < q[0, 32] then
      print rbx
      print rax
      print rcx
      print @[src2, 40]
      print @[src2 + 8, 8] - q[0, 8]
      eq := eq && @[src2 + 8, 8] - q[0, 8] = rax
      if rcx{31} = 1 then
        eq := eq && rbx = 0
      end
    end
  end  
  print rbx
  assert eq
  halt
end

explore all